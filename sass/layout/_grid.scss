.row{
    max-width: $grid-width; /*1140px, if width is lower then avalible then occupy 100% of avalible width */
    // background-color: #eee;
    margin: 0 auto; /*center the row in viewport (center block inside a block element top/bottom=0 & left/right=auto) */
    
    @include respond(tab-port){
        max-width: 50rem;
        padding: 0 3rem;
    }

    &:not(:last-child){ // everything except the last child
        margin-bottom: $gutter-vertical;

        @include respond(tab-port){ //no longer side by side so no need of gutter.
            margin-bottom: $gutter-vertical-small;
        }
    } 

    @include clearfix;

    [class^="col-"]{ // select all the attribute where class starts with col-
        // background-color: orangered;
        float: left; /* float these columns to the left side.*/
        &:not(:last-child){
            margin-right: $gutter-horizontal;

            @include respond(tab-port){ //no longer side by side so no need of gutter.
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        //set width of all columns to 100% , all columns transform to rows.
        @include respond(tab-port){
            width: 100% !important //so below width are overwritten
        }
    }

    .col-1-of-2{
        width: calc((100% - #{$gutter-horizontal}) / 2); //doing multiple unit calculations.
    }
    .col-1-of-3{
        width: calc((100% - (2 * #{$gutter-horizontal})) / 3);
    }
    .col-2-of-3{
        width: calc(2 * ((100% - (2 * #{$gutter-horizontal})) / 3) + #{$gutter-horizontal});
    }
    .col-1-of-4{
        width: calc((100% - (3 * #{$gutter-horizontal})) / 4);
    }
    .col-2-of-4{
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}); 
    }
    .col-3-of-4{
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}); 
    }
}